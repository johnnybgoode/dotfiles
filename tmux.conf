set -g utf8
setw -g utf8 on

# Set correct term
set -g default-terminal "screen-256color"

# Remap prefix to ctrl + g
set -g prefix C-g
unbind C-b

# Enable nested session
bind-key a send-prefix

# Map vi copy keys
set -g status-keys vi
setw -g mode-keys vi

# clipboard?
set -g default-shell $SHELL
#set -g default-command "reattach-to-user-namespace -l ${SHELL}"
set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"
#bind -T copy-mode M-w send -X copy-pipe "reattach-to-user-namespace pbcopy"
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# unbind [
# bind Escape copy-mode
# unbind p
# bind p paste-buffer
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection

# Map ctrl+left/right cycle through windows
bind-key -n C-right next
bind-key -n C-left prev

# Map R to source .tmux.conf
unbind R
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded.."
# Easier config editing
unbind E
bind E splitw -h \; send-keys "vim ~/.tmux.conf" Enter

# Map g to last window
bind g last-window

# Basic Options
set -g base-index 1
set -g history-limit 1000

# Enable mouse support
set -g mouse on
#bind m set mouse off \;\
#  set -g mouse off
#  display-message " Mouse disabled."
#bind M set mouse on \;\
#  set -g mouse on
#  display-message " Mouse enabled."
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on
#setw -g mode-mouse on
#bind m set mode-mouse off \;\
#	setw mode-mouse off \;\
#	set mouse-resize-pane off \;\
#	set mouse-select-pane off \;\
#	set mouse-select-window off \;\
#	display-message "  Mouse disabled.."
#bind M set mode-mouse on \;\
#	setw mode-mouse on \;\
#	set mouse-resize-pane on \;\
#	set mouse-select-pane on \;\
#	set mouse-select-window on \;\
#	display-message "  Mouse enabled.."

# Better pane bindings
unbind '"'
unbind %
bind | splitw -h
bind _ splitw -v
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

# List colors in bash `for i in {0..255}; do printf "\x1b[38;5;${i}mcolor${i}\n"; done`
# Status Line
#set -g status-bg colour73
#set -g status-fg colour59
#setw -g window-status-current-bg colour6
#setw -g window-status-current-fg colour230
#setw -g window-status-current-attr bright

#set -g status-utf8 on
#set -g status-justify left

# Zenburn-ish colors
#setw -g mode-fg colour117
#setw -g mode-bg colour238
#set -g status-bg colour235
#set -g status-fg colour248
#set -g status-attr dim
#setw -g window-status-current-fg colour223
#setw -g window-status-current-bg colour237
#setw -g window-status-current-attr bold
#set -g message-attr bold
#set -g message-fg colour117
#set -g message-bg colour235

set -g status-interval 1

#set -g status-left-length 20
#set -g status-left "#[fg=colour187,bg=colour237,bold] #H "
#set -g status-right ""#22T" %H:%M %d-%b-%y"
#set -g status-right " "

# Window Titles
set -g set-titles on
#set -g set-titles-string '[#S]: #I.#P #W'
#set -g set-titles-string '[#S]: #W'
#setw -g window-status-format "#[bg=colour237] #I #[bg=colour235] #W "
#setw -g window-status-current-format " #I #W "

# tmuxline
if-shell "test -f ~/.tmuxline.conf" "source ~/.tmuxline.conf"
